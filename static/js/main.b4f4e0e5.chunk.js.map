{"version":3,"sources":["common/Loader/Loader.js","pages/MainPage/MainPage.js","pages/Films/Films.js","assets/img/male.svg","assets/img/female.svg","pages/People/People.js","pages/Planets/Planets.js","pages/Species/Species.js","pages/Starships/Starships.js","pages/Vehicles/Vehicles.js","App.js","index.js"],"names":["className","MainPage","useState","data","setData","isLoading","setLoading","useEffect","url","a","fetch","response","json","console","log","results","request","currentIsLoaded","count","Object","keys","map","item","index","href","Films","films","setFilms","title","director","producer","release_date","Link","Anchor","Header","Layout","Content","Footer","Sider","People","people","setPeople","name","skin_color","gender","src","male","female","mass","eye_color","format","created","edited","Planets","planets","setPlanets","useReducer","x","forceUpdate","byNumberField","field","sort","b","byAlphField","onClick","climate","gravity","rotation_period","orbital_period","population","terrain","Species","species","setSpecies","average_height","average_lifespan","language","hair_colors","eye_colors","skin_colors","Starships","starships","setStarships","model","starship_class","cargo_capacity","manufacturer","crew","passengers","Vehicles","vehicles","setVehicles","vehicle_class","App","path","component","exact","to","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b4f4e0e5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Loader.scss\";\n\nexport default () => <div className=\"lds-hourglass\" />;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"../../common/Loader/Loader\";\n\nfunction MainPage() {\n  const [data, setData] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function request(url) {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data.results);\n      setData(data);      \n    }\n    const url = \"https://swapi.dev/api/\";\n    request(url);\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []); \n\n  let count = 1;\n  return (\n    <div>\n     {isLoading?<Loader/>:\n        (<table>\n          <thead>\n            <tr>\n              <th>Номер</th>\n              <th>Название</th>\n              <th>API</th>\n              <th>Ссылка</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(data).map((item, index) => (\n              <tr key={index}>\n                <td>{count++}</td>\n                <td>{item}</td>\n                <td>{data[item]}</td>\n                <td>\n                  <a href={`./${item}`}>{item}</a>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>)}\n      \n    </div>\n  );\n}\n\nexport default MainPage;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"../../common/Loader/Loader\";\n\nfunction Films() {\n  const [films, setFilms] = useState([]);\n  let [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    async function request(url) {\n      const response = await fetch(url)\n      const data = await response.json()\n      console.log(data.results);\n      setFilms(data.results)\n    }\n    const url = \"https://swapi.dev/api/films/\";\n    request(url)\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []);\n\n  return (\n    <div>\n        <a href='./'>Назад</a>\n      {isLoading?<Loader />:\n      (<table>\n        <thead>\n          <tr>  \n          <th>Название</th>\n          <th>Режиссер</th>\n          <th>Продюсер</th>\n          <th>Дата выхода</th>\n          </tr>\n        </thead>\n        <tbody>\n          {films.map((item, index) => (\n            <tr key={index}>\n              <td>{item.title}</td>\n              <td>{item.director}</td>\n              <td>{item.producer}</td>\n              <td>{item.release_date}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>)}\n    </div>\n  );\n}\n\nexport default Films;\n","export default __webpack_public_path__ + \"static/media/male.751b7f8a.svg\";","export default __webpack_public_path__ + \"static/media/female.af586cbc.svg\";","import React, { useState, useEffect } from \"react\";\nimport Moment from \"react-moment\";\nimport Loader from \"../../common/Loader/Loader\";\nimport male from \"../../assets/img/male.svg\";\nimport female from \"../../assets/img/female.svg\";\nimport \"antd/dist/antd.css\";\nimport \"./people.scss\";\n\nimport { Anchor, Layout } from \"antd\";\nconst { Link } = Anchor;\nconst { Header, Footer, Sider, Content } = Layout;\n\nfunction People() {\n  const [people, setPeople] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    async function request(url) {\n      const response = await fetch(url)\n      const data = await response.json()\n      console.log(data.results);\n      setPeople(data.results)\n    }\n    const url = \"https://swapi.dev/api/people/\";\n    request(url)\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []);\n\n  return (\n    <>\n    <Layout>\n      <Header >  \n      <Anchor>\n        <Link href=\"./\" title=\"Назад\" />\n      </Anchor>\n      </Header>\n      <Content>\n      {isLoading?<Loader />:\n      (<table>\n        <thead className=\"table_head\">\n          <tr>\n            <th>Имя</th>\n            <th>Цвет кожи</th>\n            <th>Пол</th>\n            <th>Вес</th>\n            <th>Цвет глаз</th>\n            <th>Создано</th>\n            <th>Отредактировано</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.skin_color}</td>\n              <td>\n                {(() => {\n                  switch (item.gender) {\n                    case \"male\":\n                      return <img src={male} className=\"gender\"></img>;\n                    case \"female\":\n                      return <img src={female} className=\"gender\"></img>;\n                    default:\n                      return \"n/a\";\n                  }\n                })()}\n              </td>\n              <td>{item.mass}</td>\n              <td>{item.eye_color}</td>\n              <td>\n                <Moment format=\"YYYY/MM/DD\">{item.created}</Moment>\n              </td>\n              <td>\n                <Moment format=\"YYYY/MM/DD\">{item.edited}</Moment>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>)}\n     </Content>\n    </Layout>  \n    </>\n  );\n}\n\nexport default People;\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport Loader from \"../../common/Loader/Loader\";\n\nfunction Planets() {\n  const [planets, setPlanets] = useState([]);\n  const [ignored, forceUpdate] = useReducer((x) => x + 1, 0);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    async function request(url) {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data.results);\n      setPlanets(data.results);\n    }\n    const url = \"https://swapi.dev/api/planets/\";\n    request(url);\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []);\n\n  function byNumberField(field) {\n    setPlanets(\n      planets.sort((a, b) => {\n        return +a[field] > +b[field] ? 1 : -1;\n      })\n    );\n    forceUpdate();\n  }\n\n  function byAlphField(field) {\n    setPlanets(\n      planets.sort((a, b) => {\n        return a[field] > b[field] ? 1 : -1;\n      })\n    );\n    forceUpdate();\n  }\n\n  return (\n    <div>\n      <a href=\"./\">Назад</a>\n      {isLoading?<Loader />:\n      (<table>\n        <thead>\n          <tr>\n            <th\n              onClick={() => {\n                byAlphField(\"name\");\n              }}\n            >\n              Имя\n            </th>\n            <th\n              onClick={() => {\n                byAlphField(\"climate\");\n              }}\n            >\n              Климат\n            </th>\n            <th\n              onClick={() => {\n                byNumberField(\"gravity\");\n              }}\n            >\n              Гравитация\n            </th>\n            <th\n              onClick={() => {\n                byNumberField(\"rotation_period\");\n              }}\n            >\n              Продолжительность дня\n            </th>\n            <th\n              onClick={() => {\n                byNumberField(\"orbital_period\");\n              }}\n            >\n              Продолжительность года\n            </th>\n            <th\n              onClick={() => {\n                byNumberField(\"population\");\n              }}\n            >\n              Население\n            </th>\n            <th\n              onClick={() => {\n                byAlphField(\"terrain\");\n              }}\n            >\n              Поверхность\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {planets.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.climate}</td>\n              <td>{item.gravity}</td>\n              <td>{item.rotation_period}</td>\n              <td>{item.orbital_period}</td>\n              <td>{item.population}</td>\n              <td>{item.terrain}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>)}\n    </div>\n  );\n}\n\nexport default Planets;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"../../common/Loader/Loader\";\n\nfunction Species() {\n  const [species, setSpecies] = useState([]);\n  let [isLoading, setLoading] = useState(true);\n  useEffect( () => {\n    async function request(url) {\n      const response = await fetch(url)\n      const data = await response.json()\n      console.log(data.results);\n      setSpecies(data.results)\n    }\n    const url = \"https://swapi.dev/api/species/\";\n    request(url)\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []);\n\n  return (\n    <div>\n        <a href='./'>Назад</a>\n      {isLoading?<Loader/>:  \n      (<table>\n        <thead>\n          <tr>\n            <th>Наименование</th>\n            <th>Средний рост</th>\n            <th>Средняя продолжительность жизни</th>\n            <th>Язык</th>\n            <th>Цвет волос</th>\n            <th>Цвет глаз</th>\n            <th>Цвет кожи</th>\n          </tr>\n        </thead>\n        <tbody>\n          {species.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.average_height}</td>\n              <td>{item.average_lifespan}</td>\n              <td>{item.language}</td>\n              <td>{item.hair_colors}</td>\n              <td>{item.eye_colors}</td>\n              <td>{item.skin_colors}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>)}\n    </div>\n  );\n}\n\nexport default Species;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"../../common/Loader/Loader\";\n\nfunction Starships() {\n  const [starships, setStarships] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    async function request(url) {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data.results);\n      setStarships(data.results);\n    }\n    const url = \"https://swapi.dev/api/starships/\";\n    request(url);\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []);\n\n  return (\n    <div>\n      <a href=\"./\">Назад</a>\n      {isLoading?<Loader />:\n      (<table>\n        <thead>\n          <tr>\n            <th>Наименование</th>\n            <th>Модель</th>\n            <th>Класс</th>\n            <th>Грузоподьемность</th>\n            <th>Производитель</th>\n            <th>Экипаж</th>\n            <th>Пассажиров</th>\n          </tr>\n        </thead>\n        <tbody>\n          {starships.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.model}</td>\n              <td>{item.starship_class}</td>\n              <td>{item.cargo_capacity}</td>\n              <td>{item.manufacturer}</td>\n              <td>{item.crew}</td>\n              <td>{item.passengers}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>)}\n    </div>\n  );\n}\n\nexport default Starships;\n","import React, { useState, useEffect } from \"react\";\nimport Loader from \"../../common/Loader/Loader\";\n\nfunction Vehicles() {\n  const [vehicles, setVehicles] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    async function request(url) {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data.results);\n      setVehicles(data.results);\n    }\n    const url = \"https://swapi.dev/api/vehicles/\";   \n    request(url);\n    setLoading(currentIsLoaded=>!currentIsLoaded)\n  }, []);\n\n  return (\n    <div>\n        <a href='./'>Назад</a>\n      {isLoading?<Loader/>:  \n      (<table>\n        <thead>\n          <tr>\n            <th>Наименование</th>\n            <th>Модель</th>\n            <th>Класс</th>\n            <th>Грузоподьемность</th>\n            <th>Производитель</th>\n            <th>Экипаж</th>\n            <th>Пассажиров</th>\n          </tr>\n        </thead>\n        <tbody>\n          {vehicles.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.model}</td>\n              <td>{item.vehicle_class}</td>\n              <td>{item.cargo_capacity}</td>\n              <td>{item.manufacturer}</td>\n              <td>{item.crew}</td>\n              <td>{item.passengers}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>)}\n    </div>\n  );\n}\n\nexport default Vehicles;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage/MainPage\";\nimport \"./App.scss\";\nimport Films from \"./pages/Films/Films\";\nimport People from \"./pages/People/People\";\nimport Planets from \"./pages/Planets/Planets\";\nimport Species from \"./pages/Species/Species\";\nimport Starships from \"./pages/Starships/Starships\";\nimport Vehicles from \"./pages/Vehicles/Vehicles\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/films\" component={Films} />\n        <Route path=\"/people\" component={People} />\n        <Route path=\"/planets\" component={Planets} />\n        <Route path=\"/species\" component={Species} />\n        <Route path=\"/starships\" component={Starships} />\n        <Route path=\"/vehicles\" component={Vehicles} />\n        <Route exact path=\"/\" component={MainPage} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/star_wars\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}